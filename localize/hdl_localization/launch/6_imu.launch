<?xml version="1.0"?>
<launch>
    <!-- 参数 -->
    <arg name="nodelet_manager" default="hdl_nodelet_manager" />
    <arg name="points_topic" default="/velodyne_points" />
    <!-- TODO:直接制定child_frame为imu所在的frame，是否就可以避免imu的外参标定 -->
    <!-- 目前测试不行，改变了child_frame会影响点云的方向，较好的方法是把点云转到velodyne这个tf下 -->
    <!-- input clouds are transformed in odom_child_frame, and then localization is performed in that frame -->
    <!-- this is useful to match the LIDAR and IMU coodinate systems -->
    <arg name="odom_child_frame_id" default="velodyne" />
    <!-- 可选参数 -->
    <arg name="use_imu" default="true" />
    <arg name="invert_imu_acc" default="false" />
    <arg name="invert_imu_gyro" default="false" />
    <arg name="use_global_localization" default="true" />
    <arg name="imu_topic" default="/camera4/imu" />
    <arg name="enable_robot_odometry_prediction" value="false" />
    <arg name="robot_odom_frame_id" value="odom" />
    <!-- 打印误差 -->
    <arg name="plot_estimation_errors" value="false" />
    <!-- 加载模型 -->
    <arg name="show_mesh_in_rviz" default="true" />

    <!-- 上面是参数配置部分，下面启动了一个launch和若干个nodelet -->

    <!-- 全局定位 -->
    <include file="$(find hdl_global_localization)/launch/hdl_global_localization.launch" if="$(arg use_global_localization)" />

    <!-- in case you use velodyne_driver, comment out the following line -->
    <!-- 使用velodyne官方驱动的时候避免nodelet重名 -->
    <node pkg="nodelet" type="nodelet" name="$(arg nodelet_manager)" args="manager" output="screen"/>

    <!-- globalmap_server_nodelet -->
    <node pkg="nodelet" type="nodelet" name="globalmap_server_nodelet" args="load hdl_localization/GlobalmapServerNodelet $(arg nodelet_manager)">
        <!-- 点云地图路径 -->
        <param name="globalmap_pcd" value="$(find hdl_localization)/data/6_from_mesh_v2.pcd" />
        <!-- <param name="globalmap_pcd" value="$(find hdl_localization)/data/6_clean_downsample_align_to_mesh.pcd" /> -->
        <param name="convert_utm_to_local" value="true" />
        <param name="downsample_resolution" value="0.1" />
    </node>

    <!-- hdl_localization_nodelet -->
    <node pkg="nodelet" type="nodelet" name="hdl_localization_nodelet" args="load hdl_localization/HdlLocalizationNodelet $(arg nodelet_manager)">
        <remap from="/velodyne_points" to="$(arg points_topic)" />
        <remap from="/gpsimu_driver/imu_data" to="$(arg imu_topic)" />
        <!-- odometry frame_id -->
        <param name="odom_child_frame_id" value="$(arg odom_child_frame_id)" />
        <!-- imu settings -->
        <!-- during "cool_time", imu inputs are ignored -->
        <param name="use_imu" value="$(arg use_imu)" />
        <param name="invert_acc" value="$(arg invert_imu_acc)" />
        <param name="invert_gyro" value="$(arg invert_imu_gyro)" />
        <param name="cool_time_duration" value="2.0" />
        <!-- robot odometry-based prediction -->
        <param name="enable_robot_odometry_prediction" value="$(arg enable_robot_odometry_prediction)" />
        <param name="robot_odom_frame_id" value="$(arg robot_odom_frame_id)" />
        <!-- ndt settings -->
        <!-- available reg_methods: NDT_OMP, NDT_CUDA_P2D, NDT_CUDA_D2D-->
        <param name="reg_method" value="NDT_OMP" />
        <!-- if NDT is slow for your PC, try DIRECT1 serach method, which is a bit unstable but extremely fast -->
        <param name="ndt_neighbor_search_method" value="DIRECT7" />
        <param name="ndt_neighbor_search_radius" value="2.0" />
        <param name="ndt_resolution" value="1.0" />
        <param name="downsample_resolution" value="0.1" />
        <!-- if "specify_init_pose" is true, pose estimator will be initialized with the following params -->
        <!-- otherwise, you need to input an initial pose with "2D Pose Estimate" on rviz" -->
        <param name="specify_init_pose" value="true" />
        <param name="init_pos_x" value="0.0" />
        <param name="init_pos_y" value="0.0" />
        <param name="init_pos_z" value="0.0" />
        <param name="init_ori_w" value="1.0" />
        <param name="init_ori_x" value="0.0" />
        <param name="init_ori_y" value="0.0" />
        <param name="init_ori_z" value="0.0" />

        <param name="use_global_localization" value="$(arg use_global_localization)" />
    </node>

    <!-- Rviz -->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find hdl_localization)/rviz/construction.rviz" />

    <!-- 可视化误差 -->
    <node pkg="hdl_localization" type="plot_status.py" name="plot_estimation_errors" if="$(arg plot_estimation_errors)" />
    
    <!-- 加载建筑物模型 -->
    <node pkg="show_mesh_in_rviz" type="show_mesh_in_rviz_node" name="show_mesh_in_rviz_node" if="$(arg show_mesh_in_rviz)" />

</launch>
