<launch>
    <!-- 工地的环境模型 -->
    <param name="office_geom" command="$(find xacro)/xacro --inorder '$(find cpr_office_gazebo)/urdf/office_construction_geometry.urdf.xacro'" />

    <arg name="use_sim_time" default="true" />
    <arg name="gui" default="true" />
    <arg name="headless" default="false" />
    <!-- 加载一个空环境 -->
    <arg name="world_name" default="$(find cpr_office_gazebo)/worlds/actually_empty_world.world" />

    <!-- Short-term hack to support the original front_laser:=true argument for spawning
       the simulator. This will be removed in favour of using the config:=x arg instead. -->
    <arg name="front_laser" default="true" />
    <arg name="default_config" value="front_laser" if="$(arg front_laser)" />
    <arg name="default_config" value="base" unless="$(arg front_laser)" />
    <!-- end of hack -->

    <!-- Configuration of Jackal which you would like to simulate.
       See jackal_description for details. -->
    <arg name="config" default="$(arg default_config)" />

    <!-- Launch Gazebo with the specified world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="debug" value="0" />
        <arg name="gui" value="$(arg gui)" />
        <arg name="use_sim_time" value="$(arg use_sim_time)" />
        <arg name="headless" value="$(arg headless)" />
        <arg name="world_name" value="$(arg world_name)" />
    </include>

    <!-- 在空地图里面把地图当成模型加载进去 -->
    <node name="office_world_spawner" pkg="gazebo_ros" type="spawn_model" args="-urdf -model office_geom -param office_geom -x 0 -y 0 -z 0 -Y 0" />

    <!-- 加载模型-->
    <param name="robot_description" command="$(find jackal_description)/scripts/env_run
                    $(find jackal_description)/urdf/configs/$(arg config)
                    $(find xacro)/xacro $(find jackal_velodyne)/urdf/jackal_velodyne.urdf.xacro
                    --inorder" />
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

    <!-- Control -->
    <include file="$(find jackal_control)/launch/control.launch" />
    <include file="$(find jackal_control)/launch/teleop.launch">
        <arg name="joystick" value="false"/>
    </include>

    <!-- Spawn Jackal -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" args="-urdf -model jackal -param robot_description -x 0 -y 0 -z 1.0" />

    <!-- Rviz -->
    <!-- <node pkg="rviz" type="rviz" name="rviz" args="-d $(find jackal_velodyne)/launch/include/run.rviz" /> -->

    <!-- TF -->
    <node pkg="jackal_velodyne" type="tf_publisher" name="tf_publisher" output="screen"/>

    <!-- 动态参数 -->
    <node pkg="rqt_reconfigure" type="rqt_reconfigure" name="jackal_reconfigure"/>
    
</launch>